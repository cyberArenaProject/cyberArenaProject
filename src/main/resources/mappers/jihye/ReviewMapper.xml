<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mvc.mapper.jihye.ReviewMapper">

    <!--선택한 미디어에 리뷰 등록 : email, 해당 미디어번호, 리뷰 내용, 별점,토론신청 여부-->
    <!--PK 리뷰 번호, 등록 날짜는 자동으로 들어옴-->
    <insert id="save">
        INSERT INTO review (email, media_no, review_text, user_rating, discussion_status)
        VALUES (#{email}, #{mediaNo}, #{reviewText}, #{userRating}, #{discussionStatus})
    </insert>

    <!--리뷰 수정 : 리뷰 내용, 평점, 토론신청 여부만 수정할 수 있도록-->
    <update id="modify">
        UPDATE review
        SET review_text = #{reviewText}, user_rating = #{userRating}, discussion_status = #{discussionStatus}
        WHERE review_no = #{reviewNo}
    </update>

    <!--리뷰 삭제-->
    <delete id="delete">
        DELETE FROM review
        WHERE review_no = #{reviewNo}
    </delete>

    <!--선택한 미디어에 달린 리뷰 전체조회 : 별점, 내용, 토론신청 여부-->
    <!--특정 미디어에 달린 리뷰 목록 조회-->
    <select id="findAll" resultType="com.project.mvc.dto.response.jihye.ReviewFindAllDto">
        SELECT
        u.nickname AS nickname,
        r.*
        FROM review r
        INNER JOIN user u
        ON r.email = u.email
        WHERE r.media_no = #{mediaNo}
        ORDER BY r.review_no desc
<!--        LIMIT #{pageStart}, #{amount}-->
    </select>

    <!--특정 미디어에 리뷰 총 수-->
    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM review
        WHERE media_no = #{mediaNo}
    </select>

    <select id="findMno" resultType="long">
        SELECT media_no
        FROM review
        WHERE review_no = #{rno}
    </select>

    <select id="findAllByEmail" resultType="com.project.mvc.dto.seongjin.ReviewLinkDto">
        SELECT
        R.review_no,
        R.user_rating,
        R.review_text,
        R.review_created_at,
        R.media_no,
        M.category_no,
        M.media_title,
        M.image_url
        FROM review AS R
        INNER JOIN media AS M
        USING (media_no)
        WHERE R.email = #{email}
        ORDER BY R.review_created_at
    </select>

    <select id="findAsideList" resultType="com.project.mvc.dto.response.kibeom.ReviewAsideListDto">
        SELECT
            media_no,
            review_text
        FROM review
        ORDER BY review_no ASC
        LIMIT 0, 7
    </select>
    
    <update id="updateMediaRating">
        UPDATE media
        SET rating = (SELECT avg(user_rating)
                        FROM review
                        WHERE media_no = #{mediaNo})
        WHERE media_no = #{mediaNo}
    </update>

    <update id="updateRatingWhenDeleteLastReview">
        UPDATE media
        SET rating = 0
        WHERE media_no = #{mediaNo}
    </update>

</mapper>