<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mvc.mapper.kibeom.DiscussionMapper">


    <insert id="insert">
        INSERT INTO
        discussion
        (email, media_no, discussion_title, discussion_offer)
        VALUES
        (#{email}, #{mediaNo}, #{discussionTitle}, #{discussionOffer})
    </insert>


    <select id="findAll" resultType="com.project.mvc.dto.response.kibeom.DiscussFindAllDto">
        SELECT
            U.nickname AS nickname,
            D.discussion_title,
            D.discussion_offer,
            D.discussion_created_at,
            D.review_no,
            D.discussion_no,
            D.view_count,
            M.media_title,
            (
            SELECT COUNT(DISTINCT R.email)
            FROM discuss_reply R
            WHERE R.discussion_no = D.discussion_no
            ) AS reply_count
        FROM discussion D INNER JOIN user U ON U.email = D.email
        LEFT JOIN discuss_reply R ON R.discussion_no = D.discussion_no
        INNER JOIN media M on D.media_no = M.media_no
        <if test="type == 'title'">
            WHERE D.discussion_title LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'content'">
            WHERE D.discussion_offer LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'writer'">
            WHERE U.nickname LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'tc'">
            WHERE D.discussion_title LIKE CONCAT('%', #{keyword}, '%')
                OR D.discussion_offer LIKE CONCAT('%', #{keyword}, '%')
        </if>
        GROUP BY
            U.nickname,
            D.discussion_title,
            D.discussion_offer,
            D.discussion_created_at,
            D.review_no,
            D.discussion_no,
            D.view_count
        ORDER BY D.discussion_no DESC
        LIMIT #{pageStart}, #{amount}
    </select>

    <delete id="delete">
        DELETE FROM
        discussion
        WHERE discussion_no = #{discussionNo}
    </delete>

    <select id="findOne" resultType="discussion">
        SELECT *
        FROM discussion
        WHERE discussion_no = #{discussionNo}
    </select>

    <update id="updateViewCount">
        UPDATE discussion
        SET view_count = view_count + 1
        WHERE discussion_no = #{discussionNo}
    </update>

    <select id="count" resultType="int">
        SELECT COUNT(*)
        FROM discussion D INNER JOIN user U ON D.email = U.email
        <if test="type == 'title'">
            WHERE D.discussion_title LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'content'">
            WHERE D.discussion_offer LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'writer'">
            WHERE U.nickname LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="type == 'tc'">
            WHERE D.discussion_title LIKE CONCAT('%', #{keyword}, '%')
            OR D.discussion_offer LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </select>

    <delete id="remove">
        DELETE FROM
        discussion
        WHERE discussion_no = #{discussionNo}
    </delete>


    <update id="modify">
        UPDATE discussion
        SET
        discussion_title = #{discussionTitle},
        discussion_offer = #{discussionOffer}
        WHERE discussion_no = #{discussionNo}
    </update>

    <select id="findByEmail" resultType="com.project.mvc.dto.seongjin.DiscussMyPageDto">
        SELECT
            U.nickname,
            D.discussion_no,
            D.discussion_title,
            D.email,
            D.media_no,
            M.media_title,
            M.image_url
        FROM discussion D
        INNER JOIN user U
        USING(email)
        INNER JOIN media M
        USING(media_no)
        WHERE D.discussion_no IN
        (
        SELECT
            discussion_no
        FROM discussion
        WHERE email = #{email}
        UNION
        SELECT
            discussion_no
        FROM
            discuss_reply
        WHERE email = #{email}
        )
    </select>

    <select id="findAsideList" resultType="com.project.mvc.dto.response.kibeom.DiscussAsideListDto">
        SELECT
            discussion_no,
            discussion_title,
            view_count
        FROM discussion
        ORDER BY view_count DESC
        LIMIT 0, 7
    </select>

    <select id="getSortedDiscussion" resultType="com.project.mvc.dto.response.kibeom.DiscussFindAllDto">
        SELECT
        U.nickname AS nickname,
        D.discussion_title,
        D.discussion_offer,
        D.discussion_created_at,
        D.review_no,
        D.discussion_no,
        D.view_count,
        M.media_title,
        (
        SELECT COUNT(DISTINCT R.email)
        FROM discuss_reply R
        WHERE R.discussion_no = D.discussion_no
        ) AS reply_count
        FROM discussion D INNER JOIN user U ON U.email = D.email
        LEFT JOIN discuss_reply R ON R.discussion_no = D.discussion_no
        INNER JOIN media M on D.media_no = M.media_no
        GROUP BY
        U.nickname,
        D.discussion_title,
        D.discussion_offer,
        D.discussion_created_at,
        D.review_no,
        D.discussion_no,
        D.view_count
        <if test="sort == 'new'">
            ORDER BY D.discussion_no DESC
        </if>
        <if test="sort == 'view'">
            ORDER BY D.view_count DESC
        </if>
        <if test="sort == 'hit'">
            ORDER BY reply_count DESC
        </if>

<!--        LIMIT #{pageStart}, #{amount}-->
    </select>


</mapper>